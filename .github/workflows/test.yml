name: Run Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Install backend dependencies
        working-directory: ./packages/backend
        run: bun install

      - name: Create test environment file
        working-directory: ./packages/backend
        run: |
          echo "DATABASE_URL=postgresql://test:test@localhost:5432/test_db" > .env
          echo "OPENAI_API_KEY=test-key" >> .env
          echo "BETTER_AUTH_SECRET=test-secret-key-for-testing-purposes-only" >> .env
          echo "GITHUB_CLIENT_ID=" >> .env
          echo "GITHUB_CLIENT_SECRET=" >> .env

      - name: Run backend tests
        working-directory: ./packages/backend
        run: bun run test --run
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/test_db
          OPENAI_API_KEY: test-key
          BETTER_AUTH_SECRET: test-secret-key-for-testing-purposes-only
          GITHUB_CLIENT_ID: ""
          GITHUB_CLIENT_SECRET: ""

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Install frontend dependencies
        working-directory: ./packages/frontend
        run: bun install

      - name: Run frontend tests
        working-directory: ./packages/frontend
        run: bun run test --passWithNoTests

      - name: Check frontend build
        working-directory: ./packages/frontend
        run: bun run build

  lint-and-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Install backend dependencies
        working-directory: ./packages/backend
        run: bun install

      - name: Install frontend dependencies
        working-directory: ./packages/frontend
        run: bun install

      - name: Run backend ESLint
        working-directory: ./packages/backend
        run: |
          echo "🔍 Running backend ESLint..."
          bun run lint || {
            echo "❌ Backend ESLint found issues. See above for details."
            echo "ℹ️  Run 'bun run lint:fix' to auto-fix some issues."
            exit 1
          }

      - name: Run frontend ESLint
        working-directory: ./packages/frontend
        run: |
          echo "🔍 Running frontend ESLint..."
          bun run lint || {
            echo "❌ Frontend ESLint found issues. See above for details."
            echo "ℹ️  Run 'bun run lint:fix' to auto-fix some issues."
            exit 1
          }

      - name: Check code formatting with Prettier
        run: |
          echo "🎨 Checking code formatting..."
          bunx prettier --check . || {
            echo "❌ Code formatting issues found."
            echo "ℹ️  Run 'bunx prettier --write .' to fix formatting."
            exit 1
          }

      - name: Lint Summary
        if: success()
        run: |
          echo "✅ All ESLint checks passed!"
          echo "✅ Code formatting is correct!"
          echo "🎉 Code quality standards met!"

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, lint-and-format]
    if: success()

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Setup environment files
        run: |
          # Backend env
          echo "DATABASE_URL=postgresql://test:test@localhost:5432/test_db" > packages/backend/.env
          echo "OPENAI_API_KEY=test-key" >> packages/backend/.env
          echo "BETTER_AUTH_SECRET=test-secret-key-for-testing-purposes-only" >> packages/backend/.env
          echo "GITHUB_CLIENT_ID=" >> packages/backend/.env
          echo "GITHUB_CLIENT_SECRET=" >> packages/backend/.env

      - name: Build frontend
        working-directory: ./packages/frontend
        run: bun run build

      - name: Run integration smoke tests
        run: |
          echo "✅ Backend tests passed"
          echo "✅ Frontend build successful"
          echo "✅ Lint and format checks passed"
          echo "✅ Integration checks complete"

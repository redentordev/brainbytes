services:
  backend:
    ports:
      - "3001:3001"
    build:
      context: .
      dockerfile: ./packages/backend/Dockerfile.dev
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/brainbytes
      - BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./packages/backend/src
          target: /app/packages/backend/src
          ignore:
            - node_modules/
        - action: rebuild
          path: ./packages/backend/package.json

  frontend:
    ports:
      - "3000:3000"
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile.dev
    environment:
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    develop:
      watch:
        - action: sync
          path: ./packages/frontend/src
          target: /app/src
          ignore:
            - node_modules/
            - .next/
        - action: sync
          path: ./packages/frontend/public
          target: /app/public
        - action: rebuild
          path: ./packages/frontend/package.json

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=brainbytes
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d brainbytes"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
